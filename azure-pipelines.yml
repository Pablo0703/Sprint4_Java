trigger:
  - main

variables:
  imageName: 'java-app-sprint4'
  acrName: 'acrsprint4'
  resourceGroup: 'rg-sprint4'
  containerName: 'java-app-sprint4'
  location: 'brazilsouth'

stages:
  - stage: Build
    displayName: "Build da imagem e push para o ACR"
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@4
            displayName: "Build com Maven"
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package -DskipTests'

          - task: Docker@2
            displayName: "Build e Push da imagem para o ACR"
            inputs:                                 # âœ… Corrigido: bloco inputs dentro da task
              containerRegistry: 'challenge_sprint4'   # âœ… Nome da conexÃ£o certa
              repository: 'java-app-sprint4'
              command: 'buildAndPush'
              Dockerfile: 'Dockerfile'
              buildContext: '.'
              tags: |
                latest

  - stage: Deploy
    displayName: "Deploy no Azure Container Instance (ACI)"
    dependsOn: Build
    jobs:
      - job: Deploy
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: "Deploy no Azure Container Instance"
            inputs:
              azureSubscription: 'MyAzureSubscription'  
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "ðŸ”§ Verificando se grupo de recursos existe..."
                az group show --name $(resourceGroup) || az group create --name $(resourceGroup) --location $(location)

                echo "ðŸ”‘ Obtendo credenciais do ACR..."
                ACR_USERNAME=$(az acr credential show --name $(acrName) --query "username" -o tsv)
                ACR_PASSWORD=$(az acr credential show --name $(acrName) --query "passwords[0].value" -o tsv)

                echo "ðŸš€ Fazendo deploy no ACI..."
                az container create \
                  --resource-group $(resourceGroup) \
                  --name $(containerName) \
                  --image $(acrName).azurecr.io/$(imageName):latest \
                  --cpu 1 --memory 1.5 \
                  --os-type Linux \
                  --registry-login-server $(acrName).azurecr.io \
                  --registry-username $ACR_USERNAME \
                  --registry-password $ACR_PASSWORD \
                  --ports 8080 \
                  --environment-variables \
                    SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db-sprint4:5432/$(POSTGRES_DB) \
                    SPRING_DATASOURCE_USERNAME=$(POSTGRES_USER) \
                    SPRING_DATASOURCE_PASSWORD=$(POSTGRES_PASSWORD)
